---
title: "Unit test practice"
format: html
---
## Unit testing with the 'testthat' package
First, install 'testthat' package


```{r}
#install.packages("testthat")
#install.packages("devtools")
#install.packages("remotes")

library(testthat)
library(devtools)
library(remotes)
library(pacman)
```

Write a funtion to practice unit test
This funtion finds the means of each column and returns the lowest and highest calculated mean value in that order.
We would expect our function to
- output to be numeric
- output vector of length 2
- the first value should be smaller than the second value


```{r}
mean_range <- function(df){
  # return the mean values of each column
  col_means <- apply(X = df, MARGIN = 2 , FUN = mean, na.rm = TRUE)
  # Find min and max values
  col_mean_max <- max(col_means)
  col_mean_min <- min(col_means)
  # Return min and max values in that order
  return(c(col_mean_min, col_mean_max))
}

mean_range(df = mtcars)
```

## Write some unit tests!
```{r}
# Test that the output is of length 2
#| include: false
expect_length(mean_range(mtcars), 2)
# Test that first value is less than second value
expect_true(mean_range(mtcars)[1] < mean_range(mtcars)[2])


#expect_type(mean_range(mtcars), 32

#expect_equal(mean_range(mtcars), )
```
## Practice Sourcing funtions

Custom function example
```{r}
source(here::here("src", "food_cart_functions.R"))

# Test running function
name_cart(food = "strawberry", animal = "marmot")

```

Practice with an existing function
```{r}
# Source cork oak function
source(here::here("src", "cork_oak_growth.R"))

# Call function
height_t2(3, 1, 5)
```

